apiVersion: v1
kind: PersistentVolume
metadata:
  name: test-redis-pv
  labels:
    app: pvredis
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: resid-storage
  local:
    path: /run/desktop/mnt/host/f/nfs/redis-data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - docker-desktop
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data-pvc
  namespace: test-k8s
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: resid-storage
  resources:
    requests:
      storage: 1Gi

---
kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: test-k8s-redis
  name: test-k8s-redis
  namespace: test-k8s
spec:
  type: NodePort
  ports:
  - name: test-k8s-redis
    port: 6379
    targetPort: 6379
    nodePort: 16379
  selector:
    app: redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: test-k8s
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:4
        args: ["--appendonly", "yes"]
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc